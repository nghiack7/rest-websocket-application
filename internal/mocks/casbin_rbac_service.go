// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/personal/task-management/internal/delivery/rest/middleware (interfaces: CasbinRBACService)

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	user "github.com/personal/task-management/internal/domain/user"
)

// MockCasbinRBACService is a mock of CasbinRBACService interface.
type MockCasbinRBACService struct {
	ctrl     *gomock.Controller
	recorder *MockCasbinRBACServiceMockRecorder
}

// MockCasbinRBACServiceMockRecorder is the mock recorder for MockCasbinRBACService.
type MockCasbinRBACServiceMockRecorder struct {
	mock *MockCasbinRBACService
}

// NewMockCasbinRBACService creates a new mock instance.
func NewMockCasbinRBACService(ctrl *gomock.Controller) *MockCasbinRBACService {
	mock := &MockCasbinRBACService{ctrl: ctrl}
	mock.recorder = &MockCasbinRBACServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCasbinRBACService) EXPECT() *MockCasbinRBACServiceMockRecorder {
	return m.recorder
}

// ApplyResourceFilter mocks base method.
func (m *MockCasbinRBACService) ApplyResourceFilter(arg0 *http.Request, arg1 user.Role, arg2 uuid.UUID) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ApplyResourceFilter", arg0, arg1, arg2)
}

// ApplyResourceFilter indicates an expected call of ApplyResourceFilter.
func (mr *MockCasbinRBACServiceMockRecorder) ApplyResourceFilter(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplyResourceFilter", reflect.TypeOf((*MockCasbinRBACService)(nil).ApplyResourceFilter), arg0, arg1, arg2)
}

// HasPermission mocks base method.
func (m *MockCasbinRBACService) HasPermission(arg0 user.Role, arg1, arg2 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HasPermission", arg0, arg1, arg2)
	ret0, _ := ret[0].(bool)
	return ret0
}

// HasPermission indicates an expected call of HasPermission.
func (mr *MockCasbinRBACServiceMockRecorder) HasPermission(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasPermission", reflect.TypeOf((*MockCasbinRBACService)(nil).HasPermission), arg0, arg1, arg2)
}
